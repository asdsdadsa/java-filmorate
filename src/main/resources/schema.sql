DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS MPA;
DROP TABLE IF EXISTS users;


CREATE TABLE IF NOT EXISTS users (
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     varchar(100) NOT NULL,
    login    varchar(100) NOT NULL,
    email    varchar(50)  NOT NULL,
    birthday date         NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA (
    MPA_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
	film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(50) NOT NULL,
	description varchar(100) NOT NULL,
	release_date date NOT NULL,
	duration INTEGER NOT NULL,
	mpa_id INTEGER REFERENCES MPA(MPA_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS friends (
    friend_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    PRIMARY KEY(user_id,friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
    film_id INTEGER REFERENCES films(film_id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    PRIMARY KEY(film_id,user_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER REFERENCES films(film_id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genre(genre_id) ON DELETE CASCADE,
    PRIMARY KEY(film_id,genre_id)
);


